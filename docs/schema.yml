openapi: 3.0.3
info:
  title: Eye
  version: 0.0.1
  description: Eye OpenAPI Documentation
paths:
  /authentication/google-callback:
    get:
      operationId: authentication_google_callback_retrieve
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: authentication_google_callback_create
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /authentication/login:
    post:
      operationId: authentication_login_create
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /authentication/logout:
    post:
      operationId: authentication_logout_create
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /authentication/me:
    get:
      operationId: authentication_me_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /authentication/token/refresh:
    post:
      operationId: authentication_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /providers/list:
    get:
      operationId: providers_list_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - providers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCloudProviderList'
          description: ''
  /providers/projects:
    get:
      operationId: providers_projects_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - providers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectProviderList'
          description: ''
    post:
      operationId: providers_projects_create
      tags:
      - providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectProvider'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectProvider'
          description: ''
  /providers/projects/{id}:
    get:
      operationId: providers_projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - providers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectProvider'
          description: ''
    put:
      operationId: providers_projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectProvider'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectProvider'
          description: ''
    patch:
      operationId: providers_projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectProvider'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectProvider'
          description: ''
    delete:
      operationId: providers_projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - providers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /servers/history:
    get:
      operationId: servers_history_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - servers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServerHistoryList'
          description: ''
  /servers/history/{id}:
    get:
      operationId: servers_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server ping history.
        required: true
      tags:
      - servers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerHistory'
          description: ''
  /servers/list:
    get:
      operationId: servers_list_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - servers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServerHistoryList'
          description: ''
  /servers/settings:
    get:
      operationId: servers_settings_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - servers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSettingsList'
          description: ''
    post:
      operationId: servers_settings_create
      tags:
      - servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
  /servers/settings/{id}:
    get:
      operationId: servers_settings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - servers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
    put:
      operationId: servers_settings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
    patch:
      operationId: servers_settings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
    delete:
      operationId: servers_settings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this server.
        required: true
      tags:
      - servers
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    CloudProvider:
      type: object
      properties:
        name:
          type: string
          maxLength: 225
      required:
      - name
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          minLength: 3
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        tokens:
          type: string
          readOnly: true
      required:
      - email
      - password
      - tokens
    PaginatedCloudProviderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CloudProvider'
    PaginatedProjectProviderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectProvider'
    PaginatedServerHistoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServerHistory'
    PaginatedSettingsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Settings'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedProjectProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 225
    PatchedSettings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 125
        provider:
          type: string
          maxLength: 125
        url:
          type: string
          maxLength: 225
        webhook_url:
          type: string
          maxLength: 225
        api_ping_url:
          type: string
          maxLength: 225
        active:
          type: boolean
        api_percentage_uptime:
          type: number
          format: double
        api_last_ping_status:
          type: boolean
        frontend_percentage_uptime:
          type: number
          format: double
        frontend_last_ping_status:
          type: boolean
    ProjectProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 225
      required:
      - created_at
      - id
      - name
      - updated_at
    ServerHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        pinged_back:
          type: boolean
        url_pinged:
          type: string
          maxLength: 225
        status_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        time_taken:
          type: string
        response_mimetype:
          type: string
          nullable: true
          maxLength: 225
        server:
          type: integer
      required:
      - created_at
      - id
      - server
      - updated_at
      - url_pinged
    Settings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 125
        provider:
          type: string
          maxLength: 125
        url:
          type: string
          maxLength: 225
        webhook_url:
          type: string
          maxLength: 225
        api_ping_url:
          type: string
          maxLength: 225
        active:
          type: boolean
        api_percentage_uptime:
          type: number
          format: double
        api_last_ping_status:
          type: boolean
        frontend_percentage_uptime:
          type: number
          format: double
        frontend_last_ping_status:
          type: boolean
      required:
      - created_at
      - id
      - name
      - updated_at
      - url
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        username:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        avatar:
          type: string
          maxLength: 225
        is_staff:
          type: boolean
      required:
      - created_at
      - email
      - id
      - updated_at
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: http://localhost:3000/
  description: Localhost API base URL
