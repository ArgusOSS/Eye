openapi: 3.0.2
info:
  title: Eye
  version: ''
  description: Documentation
paths:
  /authentication/google-callback:
    get:
      operationId: listGoogleLoginCallbacks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - authentication
    post:
      operationId: createGoogleLoginCallback
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - authentication
  /authentication/me:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - authentication
  /servers/settings:
    get:
      operationId: listServers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Settings'
          description: ''
      tags:
      - servers
    post:
      operationId: createServer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
      tags:
      - servers
  /servers/settings/{id}:
    get:
      operationId: retrieveServer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
      tags:
      - servers
    put:
      operationId: updateServer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
      tags:
      - servers
    patch:
      operationId: partialUpdateServer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
      tags:
      - servers
    delete:
      operationId: destroyServer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this server.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - servers
  /servers/list:
    get:
      operationId: listServerPingHistorys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServerHistory'
          description: ''
      tags:
      - servers
  /authentication/login:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - authentication
  /authentication/logout:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
      tags:
      - authentication
  /authentication/register:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - authentication
  /authentication/token/refresh:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - authentication
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        username:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        avatar:
          type: string
          maxLength: 225
        is_staff:
          type: boolean
      required:
      - email
      - username
    Settings:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 125
        provider:
          type: string
          maxLength: 125
        url:
          type: string
          maxLength: 225
        webhook_url:
          type: string
          maxLength: 225
        api_ping_url:
          type: string
          maxLength: 225
        active:
          type: boolean
      required:
      - name
      - url
    ServerHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        pinged_back:
          type: boolean
        url_pinged:
          type: string
          maxLength: 225
        status_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        response_html:
          type: string
          nullable: true
          maxLength: 255
        time_taken:
          type: string
        server:
          type: integer
      required:
      - url_pinged
      - server
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          minLength: 3
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        tokens:
          type: string
          readOnly: true
      required:
      - email
      - password
    Logout:
      type: object
      properties: {}
    Register:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        username:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
      required:
      - email
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
